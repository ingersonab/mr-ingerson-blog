{"ast":null,"code":"function normalizeSearchParameters(query) {\n  const convertedQuery = {};\n  let hasConverted = false;\n  for (const key in query) {\n    // We allow multiple values to be passed as arrays\n    // which have to be converted to comma-separated strings before being sent to the API\n    if (Array.isArray(query[key])) {\n      convertedQuery[key] = query[key].join(',');\n      hasConverted = true;\n    }\n  }\n  if (hasConverted) {\n    return Object.assign(Object.assign({}, query), convertedQuery);\n  }\n  return query;\n}\nexport { normalizeSearchParameters as default };","map":{"version":3,"names":["normalizeSearchParameters","query","convertedQuery","hasConverted","key","Array","isArray","join","Object","assign","default"],"sources":["/Users/alyssaingerson/Documents/GitHub/mr-ingerson-blog/node_modules/contentful/dist/esm/utils/normalize-search-parameters.js"],"sourcesContent":["function normalizeSearchParameters(query) {\n    const convertedQuery = {};\n    let hasConverted = false;\n    for (const key in query) {\n        // We allow multiple values to be passed as arrays\n        // which have to be converted to comma-separated strings before being sent to the API\n        if (Array.isArray(query[key])) {\n            convertedQuery[key] = query[key].join(',');\n            hasConverted = true;\n        }\n    }\n    if (hasConverted) {\n        return Object.assign(Object.assign({}, query), convertedQuery);\n    }\n    return query;\n}\n\nexport { normalizeSearchParameters as default };\n"],"mappings":"AAAA,SAASA,yBAAyBA,CAACC,KAAK,EAAE;EACtC,MAAMC,cAAc,GAAG,CAAC,CAAC;EACzB,IAAIC,YAAY,GAAG,KAAK;EACxB,KAAK,MAAMC,GAAG,IAAIH,KAAK,EAAE;IACrB;IACA;IACA,IAAII,KAAK,CAACC,OAAO,CAACL,KAAK,CAACG,GAAG,CAAC,CAAC,EAAE;MAC3BF,cAAc,CAACE,GAAG,CAAC,GAAGH,KAAK,CAACG,GAAG,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;MAC1CJ,YAAY,GAAG,IAAI;IACvB;EACJ;EACA,IAAIA,YAAY,EAAE;IACd,OAAOK,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAER,KAAK,CAAC,EAAEC,cAAc,CAAC;EAClE;EACA,OAAOD,KAAK;AAChB;AAEA,SAASD,yBAAyB,IAAIU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}