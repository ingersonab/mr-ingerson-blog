{"ast":null,"code":"var _jsxFileName = \"/Users/alyssaingerson/Documents/GitHub/mr-ingerson-blog/src/components/Post/Post.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./Post.css\";\nimport { Link } from \"react-router-dom\";\nimport { createClient } from 'contentful';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  selectedCategory\n}) {\n  _s();\n  const [blogPosts, setBlogPosts] = useState([]);\n  const client = createClient({\n    space: \"c2coqf0hrs8z\",\n    accessToken: \"rO_zDMrrcg28Vx21OpMLpsSkTxmX7uOL8molgDLYoPs\"\n  });\n  useEffect(() => {\n    const getAllEntries = async () => {\n      try {\n        const blogEntries = await client.getEntries({\n          content_type: 'blogPost'\n        });\n        console.log(blogEntries);\n        setBlogPosts(blogEntries.items);\n      } catch (err) {\n        console.log(\"Error with fetching blog entries: \", err);\n      }\n    };\n    getAllEntries();\n  }, []);\n\n  //filter posts by selected category\n  const filteredPosts = selectedCategory ? blogPosts.filter(post => {\n    var _post$fields, _post$fields$blogCate;\n    return (_post$fields = post.fields) === null || _post$fields === void 0 ? void 0 : (_post$fields$blogCate = _post$fields.blogCategories) === null || _post$fields$blogCate === void 0 ? void 0 : _post$fields$blogCate.includes(selectedCategory);\n  }) : blogPosts;\n  console.log('Selected Category:', selectedCategory); // Debugging\n  console.log('Filtered Posts:', filteredPosts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filteredPosts === null || filteredPosts === void 0 ? void 0 : filteredPosts.map(post => {\n      var _post$fields$blogImag, _post$fields$blogImag2, _post$fields$blogImag3, _post$fields2, _post$fields2$blogCat;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/postDetails/${post.sys.id}`,\n        className: \"postLink\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"postImg\",\n            src: (_post$fields$blogImag = post.fields.blogImage) === null || _post$fields$blogImag === void 0 ? void 0 : (_post$fields$blogImag2 = _post$fields$blogImag.fields) === null || _post$fields$blogImag2 === void 0 ? void 0 : (_post$fields$blogImag3 = _post$fields$blogImag2.file) === null || _post$fields$blogImag3 === void 0 ? void 0 : _post$fields$blogImag3.url,\n            alt: post.fields.blogTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postCats\",\n              children: (_post$fields2 = post.fields) === null || _post$fields2 === void 0 ? void 0 : (_post$fields2$blogCat = _post$fields2.blogCategory) === null || _post$fields2$blogCat === void 0 ? void 0 : _post$fields2$blogCat.map((category, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"postCat\",\n                children: category\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"postTitle\",\n              children: post.fields.blogTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"postDate\",\n              children: post.fields.createdDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"postDesc\",\n            children: post.fields.postContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, post.sys.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(Post, \"XPnXzGHc6ei3+85WAloLzHNf/BE=\");\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","Link","createClient","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","selectedCategory","_s","blogPosts","setBlogPosts","client","space","accessToken","getAllEntries","blogEntries","getEntries","content_type","console","log","items","err","filteredPosts","filter","post","_post$fields","_post$fields$blogCate","fields","blogCategories","includes","children","map","_post$fields$blogImag","_post$fields$blogImag2","_post$fields$blogImag3","_post$fields2","_post$fields2$blogCat","to","sys","id","className","src","blogImage","file","url","alt","blogTitle","fileName","_jsxFileName","lineNumber","columnNumber","blogCategory","category","index","createdDate","postContent","_c","$RefreshReg$"],"sources":["/Users/alyssaingerson/Documents/GitHub/mr-ingerson-blog/src/components/Post/Post.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport \"./Post.css\"\nimport {Link} from \"react-router-dom\";\nimport { createClient } from 'contentful';\n\nexport default function Post({selectedCategory}) {\n\n  const [blogPosts, setBlogPosts] = useState([])\n\n  const client = createClient({space: \"c2coqf0hrs8z\", accessToken: \"rO_zDMrrcg28Vx21OpMLpsSkTxmX7uOL8molgDLYoPs\"})\n\n  useEffect(() => {\n    const getAllEntries = async () => {\n      try{\n        const blogEntries = await client.getEntries({\n          content_type: 'blogPost',\n        })\n        console.log(blogEntries)\n        setBlogPosts(blogEntries.items);\n\n      } catch(err) {\n        console.log(\"Error with fetching blog entries: \", err)\n      }\n    }\n    getAllEntries()\n  }, [])\n\n  //filter posts by selected category\n  const filteredPosts = selectedCategory\n    ? blogPosts.filter((post) =>\n      post.fields?.blogCategories?.includes(selectedCategory)\n    )\n    : blogPosts;\n\n    console.log('Selected Category:', selectedCategory);  // Debugging\n    console.log('Filtered Posts:', filteredPosts); \n\n  return (\n    <>\n      {filteredPosts?.map((post) => (\n        <Link\n          to={`/postDetails/${post.sys.id}`}\n          className=\"postLink\"\n          key={post.sys.id}\n        >\n          <div className=\"post\">\n            <img className=\"postImg\"\n              src={post.fields.blogImage?.fields?.file?.url}\n              alt={post.fields.blogTitle}\n            />\n            <div className=\"postInfo\">\n              <div className=\"postCats\">\n                  {post.fields?.blogCategory?.map((category, index) => (\n                    <span key={index} className=\"postCat\">{category}</span>\n                  ))}\n              </div>\n              <span className=\"postTitle\">{post.fields.blogTitle}</span>\n              <hr />\n              <span className=\"postDate\">{post.fields.createdDate}</span>\n            </div>\n            <p className=\"postDesc\">\n              {post.fields.postContent}\n            </p>\n          </div>\n        </Link>\n      ))}\n    </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,YAAY;AACnB,SAAQC,IAAI,QAAO,kBAAkB;AACrC,SAASC,YAAY,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,IAAIA,CAAC;EAACC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAE/C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMY,MAAM,GAAGV,YAAY,CAAC;IAACW,KAAK,EAAE,cAAc;IAAEC,WAAW,EAAE;EAA6C,CAAC,CAAC;EAEhHf,SAAS,CAAC,MAAM;IACd,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAG;QACD,MAAMC,WAAW,GAAG,MAAMJ,MAAM,CAACK,UAAU,CAAC;UAC1CC,YAAY,EAAE;QAChB,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;QACxBL,YAAY,CAACK,WAAW,CAACK,KAAK,CAAC;MAEjC,CAAC,CAAC,OAAMC,GAAG,EAAE;QACXH,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEE,GAAG,CAAC;MACxD;IACF,CAAC;IACDP,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,aAAa,GAAGf,gBAAgB,GAClCE,SAAS,CAACc,MAAM,CAAEC,IAAI;IAAA,IAAAC,YAAA,EAAAC,qBAAA;IAAA,QAAAD,YAAA,GACtBD,IAAI,CAACG,MAAM,cAAAF,YAAA,wBAAAC,qBAAA,GAAXD,YAAA,CAAaG,cAAc,cAAAF,qBAAA,uBAA3BA,qBAAA,CAA6BG,QAAQ,CAACtB,gBAAgB,CAAC;EAAA,CACzD,CAAC,GACCE,SAAS;EAEXS,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEZ,gBAAgB,CAAC,CAAC,CAAE;EACtDW,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEG,aAAa,CAAC;EAE/C,oBACEnB,OAAA,CAAAE,SAAA;IAAAyB,QAAA,EACGR,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAES,GAAG,CAAEP,IAAI;MAAA,IAAAQ,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,aAAA,EAAAC,qBAAA;MAAA,oBACvBjC,OAAA,CAACH,IAAI;QACHqC,EAAE,EAAE,gBAAgBb,IAAI,CAACc,GAAG,CAACC,EAAE,EAAG;QAClCC,SAAS,EAAC,UAAU;QAAAV,QAAA,eAGpB3B,OAAA;UAAKqC,SAAS,EAAC,MAAM;UAAAV,QAAA,gBACnB3B,OAAA;YAAKqC,SAAS,EAAC,SAAS;YACtBC,GAAG,GAAAT,qBAAA,GAAER,IAAI,CAACG,MAAM,CAACe,SAAS,cAAAV,qBAAA,wBAAAC,sBAAA,GAArBD,qBAAA,CAAuBL,MAAM,cAAAM,sBAAA,wBAAAC,sBAAA,GAA7BD,sBAAA,CAA+BU,IAAI,cAAAT,sBAAA,uBAAnCA,sBAAA,CAAqCU,GAAI;YAC9CC,GAAG,EAAErB,IAAI,CAACG,MAAM,CAACmB;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACF/C,OAAA;YAAKqC,SAAS,EAAC,UAAU;YAAAV,QAAA,gBACvB3B,OAAA;cAAKqC,SAAS,EAAC,UAAU;cAAAV,QAAA,GAAAK,aAAA,GACpBX,IAAI,CAACG,MAAM,cAAAQ,aAAA,wBAAAC,qBAAA,GAAXD,aAAA,CAAagB,YAAY,cAAAf,qBAAA,uBAAzBA,qBAAA,CAA2BL,GAAG,CAAC,CAACqB,QAAQ,EAAEC,KAAK,kBAC9ClD,OAAA;gBAAkBqC,SAAS,EAAC,SAAS;gBAAAV,QAAA,EAAEsB;cAAQ,GAApCC,KAAK;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAsC,CACvD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACN/C,OAAA;cAAMqC,SAAS,EAAC,WAAW;cAAAV,QAAA,EAAEN,IAAI,CAACG,MAAM,CAACmB;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC1D/C,OAAA;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACN/C,OAAA;cAAMqC,SAAS,EAAC,UAAU;cAAAV,QAAA,EAAEN,IAAI,CAACG,MAAM,CAAC2B;YAAW;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC,eACN/C,OAAA;YAAGqC,SAAS,EAAC,UAAU;YAAAV,QAAA,EACpBN,IAAI,CAACG,MAAM,CAAC4B;UAAW;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC,GApBD1B,IAAI,CAACc,GAAG,CAACC,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqBZ,CAAC;IAAA,CACR;EAAC,gBACF,CAAC;AAEP;AAAC1C,EAAA,CA/DuBF,IAAI;AAAAkD,EAAA,GAAJlD,IAAI;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}