{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\nimport copy from 'fast-copy';\nvar UNRESOLVED_LINK = {}; // unique object to avoid polyfill bloat using Symbol()\n\n/**\r\n * isLink Function\r\n * Checks if the object has sys.type \"Link\"\r\n * @param object\r\n */\nvar isLink = function isLink(object) {\n  return object && object.sys && object.sys.type === 'Link';\n};\n\n/**\r\n * isResourceLink Function\r\n * Checks if the object has sys.type \"ResourceLink\"\r\n * @param object\r\n */\nvar isResourceLink = function isResourceLink(object) {\n  return object && object.sys && object.sys.type === 'ResourceLink';\n};\n\n/**\r\n * Creates a key with spaceId and a key without for entityMap\r\n *\r\n * @param {*} sys\r\n * @param {String} sys.type\r\n * @param {String} sys.id\r\n * @param {*} sys.space\r\n * @param {*} sys.space.sys\r\n * @param {String} sys.space.id\r\n * @return {string[]}\r\n */\nvar makeEntityMapKeys = function makeEntityMapKeys(sys) {\n  if (sys.space && sys.environment) {\n    return [sys.type + '!' + sys.id, sys.space.sys.id + '!' + sys.environment.sys.id + '!' + sys.type + '!' + sys.id];\n  }\n  return [sys.type + '!' + sys.id];\n};\n\n/**\r\n * Looks up in entityMap\r\n *\r\n * @param entityMap\r\n * @param {*} linkData\r\n * @param {String} linkData.type\r\n * @param {String} linkData.linkType\r\n * @param {String} linkData.id\r\n * @param {String} linkData.urn\r\n * @return {String}\r\n */\nvar lookupInEntityMap = function lookupInEntityMap(entityMap, linkData) {\n  var entryId = linkData.entryId,\n    linkType = linkData.linkType,\n    spaceId = linkData.spaceId,\n    environmentId = linkData.environmentId;\n  if (spaceId && environmentId) {\n    return entityMap.get(spaceId + '!' + environmentId + '!' + linkType + '!' + entryId);\n  }\n  return entityMap.get(linkType + '!' + entryId);\n};\nvar getIdsFromUrn = function getIdsFromUrn(urn) {\n  var regExp = /.*:spaces\\/([^/]+)(?:\\/environments\\/([^/]+))?\\/entries\\/([^/]+)$/;\n  if (!regExp.test(urn)) {\n    return undefined;\n  }\n  var _urn$match = urn.match(regExp),\n    _urn$match2 = _slicedToArray(_urn$match, 4),\n    _ = _urn$match2[0],\n    spaceId = _urn$match2[1],\n    _urn$match2$ = _urn$match2[2],\n    environmentId = _urn$match2$ === undefined ? 'master' : _urn$match2$,\n    entryId = _urn$match2[3];\n  return {\n    spaceId: spaceId,\n    environmentId: environmentId,\n    entryId: entryId\n  };\n};\n\n/**\r\n * getResolvedLink Function\r\n *\r\n * @param entityMap\r\n * @param link\r\n * @return {undefined}\r\n */\nvar getResolvedLink = function getResolvedLink(entityMap, link) {\n  var _link$sys = link.sys,\n    type = _link$sys.type,\n    linkType = _link$sys.linkType;\n  if (type === 'ResourceLink') {\n    if (!linkType.startsWith('Contentful:')) {\n      return link;\n    }\n    var urn = link.sys.urn;\n    var _getIdsFromUrn = getIdsFromUrn(urn),\n      spaceId = _getIdsFromUrn.spaceId,\n      environmentId = _getIdsFromUrn.environmentId,\n      _entryId = _getIdsFromUrn.entryId;\n    var extractedLinkType = linkType.split(':')[1];\n    return lookupInEntityMap(entityMap, {\n      linkType: extractedLinkType,\n      entryId: _entryId,\n      spaceId: spaceId,\n      environmentId: environmentId\n    }) || UNRESOLVED_LINK;\n  }\n  var entryId = link.sys.id;\n  return lookupInEntityMap(entityMap, {\n    linkType: linkType,\n    entryId: entryId\n  }) || UNRESOLVED_LINK;\n};\n\n/**\r\n * cleanUpLinks Function\r\n * - Removes unresolvable links from Arrays and Objects\r\n *\r\n * @param {Object[]|Object} input\r\n */\nvar cleanUpLinks = function cleanUpLinks(input) {\n  if (Array.isArray(input)) {\n    return input.filter(function (val) {\n      return val !== UNRESOLVED_LINK;\n    });\n  }\n  for (var key in input) {\n    if (input[key] === UNRESOLVED_LINK) {\n      delete input[key];\n    }\n  }\n  return input;\n};\n\n/**\r\n * walkMutate Function\r\n * @param input\r\n * @param predicate\r\n * @param mutator\r\n * @param removeUnresolved\r\n * @return {*}\r\n */\nvar walkMutate = function walkMutate(input, predicate, mutator, removeUnresolved) {\n  if (predicate(input)) {\n    return mutator(input);\n  }\n  if (input && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object') {\n    for (var key in input) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (input.hasOwnProperty(key)) {\n        input[key] = walkMutate(input[key], predicate, mutator, removeUnresolved);\n      }\n    }\n    if (removeUnresolved) {\n      input = cleanUpLinks(input);\n    }\n  }\n  return input;\n};\nvar normalizeLink = function normalizeLink(entityMap, link, removeUnresolved) {\n  var resolvedLink = getResolvedLink(entityMap, link);\n  if (resolvedLink === UNRESOLVED_LINK) {\n    return removeUnresolved ? resolvedLink : link;\n  }\n  return resolvedLink;\n};\nvar makeEntryObject = function makeEntryObject(item, itemEntryPoints) {\n  if (!Array.isArray(itemEntryPoints)) {\n    return item;\n  }\n  var entryPoints = Object.keys(item).filter(function (ownKey) {\n    return itemEntryPoints.indexOf(ownKey) !== -1;\n  });\n  return entryPoints.reduce(function (entryObj, entryPoint) {\n    entryObj[entryPoint] = item[entryPoint];\n    return entryObj;\n  }, {});\n};\n\n/**\r\n * resolveResponse Function\r\n * Resolves contentful response to normalized form.\r\n * @param {Object} response Contentful response\r\n * @param {{removeUnresolved: Boolean, itemEntryPoints: Array<String>}|{}} options\r\n * @param {Boolean} options.removeUnresolved - Remove unresolved links default:false\r\n * @param {Array<String>} options.itemEntryPoints - Resolve links only in those item properties\r\n * @return {Object}\r\n */\nvar resolveResponse = function resolveResponse(response, options) {\n  options = options || {};\n  if (!response.items) {\n    return [];\n  }\n  var responseClone = copy(response);\n  var allIncludes = Object.keys(responseClone.includes || {}).reduce(function (all, type) {\n    return [].concat(_toConsumableArray(all), _toConsumableArray(response.includes[type]));\n  }, []);\n  var allEntries = [].concat(_toConsumableArray(responseClone.items), _toConsumableArray(allIncludes)).filter(function (entity) {\n    return Boolean(entity.sys);\n  });\n  var entityMap = new Map(allEntries.reduce(function (acc, entity) {\n    var entries = makeEntityMapKeys(entity.sys).map(function (key) {\n      return [key, entity];\n    });\n    acc.push.apply(acc, _toConsumableArray(entries));\n    return acc;\n  }, []));\n  allEntries.forEach(function (item) {\n    var entryObject = makeEntryObject(item, options.itemEntryPoints);\n    Object.assign(item, walkMutate(entryObject, function (x) {\n      return isLink(x) || isResourceLink(x);\n    }, function (link) {\n      return normalizeLink(entityMap, link, options.removeUnresolved);\n    }, options.removeUnresolved));\n  });\n  return responseClone.items;\n};\nexport default resolveResponse;","map":{"version":3,"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_toConsumableArray","arr2","from","copy","UNRESOLVED_LINK","isLink","object","sys","type","isResourceLink","makeEntityMapKeys","space","environment","id","lookupInEntityMap","entityMap","linkData","entryId","linkType","spaceId","environmentId","get","getIdsFromUrn","urn","regExp","test","_urn$match","match","_urn$match2","_","_urn$match2$","getResolvedLink","link","_link$sys","startsWith","_getIdsFromUrn","_entryId","extractedLinkType","split","cleanUpLinks","input","filter","val","key","walkMutate","predicate","mutator","removeUnresolved","hasOwnProperty","normalizeLink","resolvedLink","makeEntryObject","item","itemEntryPoints","entryPoints","keys","ownKey","indexOf","reduce","entryObj","entryPoint","resolveResponse","response","options","items","responseClone","allIncludes","includes","all","concat","allEntries","entity","Boolean","Map","acc","entries","map","apply","forEach","entryObject","assign","x"],"sources":["C:/Users/ainge/OneDrive/Documents/GitHub/mr-ingerson-blog/node_modules/contentful-resolve-response/dist/esm/index.js"],"sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\r\n\r\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\r\n\r\nimport copy from 'fast-copy';\r\n\r\nvar UNRESOLVED_LINK = {}; // unique object to avoid polyfill bloat using Symbol()\r\n\r\n/**\r\n * isLink Function\r\n * Checks if the object has sys.type \"Link\"\r\n * @param object\r\n */\r\nvar isLink = function isLink(object) {\r\n  return object && object.sys && object.sys.type === 'Link';\r\n};\r\n\r\n/**\r\n * isResourceLink Function\r\n * Checks if the object has sys.type \"ResourceLink\"\r\n * @param object\r\n */\r\nvar isResourceLink = function isResourceLink(object) {\r\n  return object && object.sys && object.sys.type === 'ResourceLink';\r\n};\r\n\r\n/**\r\n * Creates a key with spaceId and a key without for entityMap\r\n *\r\n * @param {*} sys\r\n * @param {String} sys.type\r\n * @param {String} sys.id\r\n * @param {*} sys.space\r\n * @param {*} sys.space.sys\r\n * @param {String} sys.space.id\r\n * @return {string[]}\r\n */\r\nvar makeEntityMapKeys = function makeEntityMapKeys(sys) {\r\n  if (sys.space && sys.environment) {\r\n    return [sys.type + '!' + sys.id, sys.space.sys.id + '!' + sys.environment.sys.id + '!' + sys.type + '!' + sys.id];\r\n  }\r\n\r\n  return [sys.type + '!' + sys.id];\r\n};\r\n\r\n/**\r\n * Looks up in entityMap\r\n *\r\n * @param entityMap\r\n * @param {*} linkData\r\n * @param {String} linkData.type\r\n * @param {String} linkData.linkType\r\n * @param {String} linkData.id\r\n * @param {String} linkData.urn\r\n * @return {String}\r\n */\r\nvar lookupInEntityMap = function lookupInEntityMap(entityMap, linkData) {\r\n  var entryId = linkData.entryId,\r\n      linkType = linkData.linkType,\r\n      spaceId = linkData.spaceId,\r\n      environmentId = linkData.environmentId;\r\n\r\n\r\n  if (spaceId && environmentId) {\r\n    return entityMap.get(spaceId + '!' + environmentId + '!' + linkType + '!' + entryId);\r\n  }\r\n\r\n  return entityMap.get(linkType + '!' + entryId);\r\n};\r\n\r\nvar getIdsFromUrn = function getIdsFromUrn(urn) {\r\n  var regExp = /.*:spaces\\/([^/]+)(?:\\/environments\\/([^/]+))?\\/entries\\/([^/]+)$/;\r\n\r\n  if (!regExp.test(urn)) {\r\n    return undefined;\r\n  }\r\n\r\n  var _urn$match = urn.match(regExp),\r\n      _urn$match2 = _slicedToArray(_urn$match, 4),\r\n      _ = _urn$match2[0],\r\n      spaceId = _urn$match2[1],\r\n      _urn$match2$ = _urn$match2[2],\r\n      environmentId = _urn$match2$ === undefined ? 'master' : _urn$match2$,\r\n      entryId = _urn$match2[3];\r\n\r\n  return { spaceId: spaceId, environmentId: environmentId, entryId: entryId };\r\n};\r\n\r\n/**\r\n * getResolvedLink Function\r\n *\r\n * @param entityMap\r\n * @param link\r\n * @return {undefined}\r\n */\r\nvar getResolvedLink = function getResolvedLink(entityMap, link) {\r\n  var _link$sys = link.sys,\r\n      type = _link$sys.type,\r\n      linkType = _link$sys.linkType;\r\n\r\n  if (type === 'ResourceLink') {\r\n    if (!linkType.startsWith('Contentful:')) {\r\n      return link;\r\n    }\r\n\r\n    var urn = link.sys.urn;\r\n\r\n    var _getIdsFromUrn = getIdsFromUrn(urn),\r\n        spaceId = _getIdsFromUrn.spaceId,\r\n        environmentId = _getIdsFromUrn.environmentId,\r\n        _entryId = _getIdsFromUrn.entryId;\r\n\r\n    var extractedLinkType = linkType.split(':')[1];\r\n\r\n    return lookupInEntityMap(entityMap, {\r\n      linkType: extractedLinkType,\r\n      entryId: _entryId,\r\n      spaceId: spaceId,\r\n      environmentId: environmentId\r\n    }) || UNRESOLVED_LINK;\r\n  }\r\n\r\n  var entryId = link.sys.id;\r\n\r\n  return lookupInEntityMap(entityMap, { linkType: linkType, entryId: entryId }) || UNRESOLVED_LINK;\r\n};\r\n\r\n/**\r\n * cleanUpLinks Function\r\n * - Removes unresolvable links from Arrays and Objects\r\n *\r\n * @param {Object[]|Object} input\r\n */\r\nvar cleanUpLinks = function cleanUpLinks(input) {\r\n  if (Array.isArray(input)) {\r\n    return input.filter(function (val) {\r\n      return val !== UNRESOLVED_LINK;\r\n    });\r\n  }\r\n  for (var key in input) {\r\n    if (input[key] === UNRESOLVED_LINK) {\r\n      delete input[key];\r\n    }\r\n  }\r\n  return input;\r\n};\r\n\r\n/**\r\n * walkMutate Function\r\n * @param input\r\n * @param predicate\r\n * @param mutator\r\n * @param removeUnresolved\r\n * @return {*}\r\n */\r\nvar walkMutate = function walkMutate(input, predicate, mutator, removeUnresolved) {\r\n  if (predicate(input)) {\r\n    return mutator(input);\r\n  }\r\n\r\n  if (input && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object') {\r\n    for (var key in input) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (input.hasOwnProperty(key)) {\r\n        input[key] = walkMutate(input[key], predicate, mutator, removeUnresolved);\r\n      }\r\n    }\r\n    if (removeUnresolved) {\r\n      input = cleanUpLinks(input);\r\n    }\r\n  }\r\n  return input;\r\n};\r\n\r\nvar normalizeLink = function normalizeLink(entityMap, link, removeUnresolved) {\r\n  var resolvedLink = getResolvedLink(entityMap, link);\r\n  if (resolvedLink === UNRESOLVED_LINK) {\r\n    return removeUnresolved ? resolvedLink : link;\r\n  }\r\n  return resolvedLink;\r\n};\r\n\r\nvar makeEntryObject = function makeEntryObject(item, itemEntryPoints) {\r\n  if (!Array.isArray(itemEntryPoints)) {\r\n    return item;\r\n  }\r\n\r\n  var entryPoints = Object.keys(item).filter(function (ownKey) {\r\n    return itemEntryPoints.indexOf(ownKey) !== -1;\r\n  });\r\n\r\n  return entryPoints.reduce(function (entryObj, entryPoint) {\r\n    entryObj[entryPoint] = item[entryPoint];\r\n    return entryObj;\r\n  }, {});\r\n};\r\n\r\n/**\r\n * resolveResponse Function\r\n * Resolves contentful response to normalized form.\r\n * @param {Object} response Contentful response\r\n * @param {{removeUnresolved: Boolean, itemEntryPoints: Array<String>}|{}} options\r\n * @param {Boolean} options.removeUnresolved - Remove unresolved links default:false\r\n * @param {Array<String>} options.itemEntryPoints - Resolve links only in those item properties\r\n * @return {Object}\r\n */\r\nvar resolveResponse = function resolveResponse(response, options) {\r\n  options = options || {};\r\n  if (!response.items) {\r\n    return [];\r\n  }\r\n  var responseClone = copy(response);\r\n  var allIncludes = Object.keys(responseClone.includes || {}).reduce(function (all, type) {\r\n    return [].concat(_toConsumableArray(all), _toConsumableArray(response.includes[type]));\r\n  }, []);\r\n\r\n  var allEntries = [].concat(_toConsumableArray(responseClone.items), _toConsumableArray(allIncludes)).filter(function (entity) {\r\n    return Boolean(entity.sys);\r\n  });\r\n\r\n  var entityMap = new Map(allEntries.reduce(function (acc, entity) {\r\n    var entries = makeEntityMapKeys(entity.sys).map(function (key) {\r\n      return [key, entity];\r\n    });\r\n    acc.push.apply(acc, _toConsumableArray(entries));\r\n    return acc;\r\n  }, []));\r\n\r\n  allEntries.forEach(function (item) {\r\n    var entryObject = makeEntryObject(item, options.itemEntryPoints);\r\n\r\n    Object.assign(item, walkMutate(entryObject, function (x) {\r\n      return isLink(x) || isResourceLink(x);\r\n    }, function (link) {\r\n      return normalizeLink(entityMap, link, options.removeUnresolved);\r\n    }, options.removeUnresolved));\r\n  });\r\n\r\n  return responseClone.items;\r\n};\r\n\r\nexport default resolveResponse;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}