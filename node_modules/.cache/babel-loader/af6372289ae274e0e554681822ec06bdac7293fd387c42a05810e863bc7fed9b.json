{"ast":null,"code":"'use strict';\n\nvar React = require('react');\nvar richTextTypes = require('@contentful/rich-text-types');\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction appendKeyToValidElement(element, key) {\n  if (React.isValidElement(element) && element.key === null) {\n    return React.cloneElement(element, {\n      key: key\n    });\n  }\n  return element;\n}\nfunction nodeListToReactComponents(nodes, options) {\n  return nodes.map(function (node, index) {\n    return appendKeyToValidElement(nodeToReactComponent(node, options), index);\n  });\n}\nfunction nodeToReactComponent(node, options) {\n  var renderNode = options.renderNode,\n    renderMark = options.renderMark,\n    renderText = options.renderText,\n    preserveWhitespace = options.preserveWhitespace;\n  if (richTextTypes.helpers.isText(node)) {\n    var nodeValue = renderText ? renderText(node.value) : node.value;\n    // Preserving whitespace is only supported with the default transformations.\n    if (preserveWhitespace && !renderText) {\n      // Preserve multiple spaces.\n      nodeValue = nodeValue.replace(/ {2,}/g, function (match) {\n        return '\\u00A0'.repeat(match.length);\n      });\n      // Preserve line breaks.\n      var lines_1 = nodeValue.split('\\n');\n      var jsxLines_1 = [];\n      lines_1.forEach(function (line, index) {\n        jsxLines_1.push(line);\n        if (index !== lines_1.length - 1) {\n          jsxLines_1.push(React.createElement(\"br\", null));\n        }\n      });\n      nodeValue = jsxLines_1;\n    }\n    return node.marks.reduce(function (value, mark) {\n      if (!renderMark[mark.type]) {\n        return value;\n      }\n      return renderMark[mark.type](value);\n    }, nodeValue);\n  } else {\n    var children = nodeListToReactComponents(node.content, options);\n    if (!node.nodeType || !renderNode[node.nodeType]) {\n      return React.createElement(React.Fragment, null, children);\n    }\n    return renderNode[node.nodeType](node, children);\n  }\n}\nvar _a, _b;\nvar defaultNodeRenderers = (_a = {}, _a[richTextTypes.BLOCKS.DOCUMENT] = function (node, children) {\n  return children;\n}, _a[richTextTypes.BLOCKS.PARAGRAPH] = function (node, children) {\n  return React.createElement(\"p\", null, children);\n}, _a[richTextTypes.BLOCKS.HEADING_1] = function (node, children) {\n  return React.createElement(\"h1\", null, children);\n}, _a[richTextTypes.BLOCKS.HEADING_2] = function (node, children) {\n  return React.createElement(\"h2\", null, children);\n}, _a[richTextTypes.BLOCKS.HEADING_3] = function (node, children) {\n  return React.createElement(\"h3\", null, children);\n}, _a[richTextTypes.BLOCKS.HEADING_4] = function (node, children) {\n  return React.createElement(\"h4\", null, children);\n}, _a[richTextTypes.BLOCKS.HEADING_5] = function (node, children) {\n  return React.createElement(\"h5\", null, children);\n}, _a[richTextTypes.BLOCKS.HEADING_6] = function (node, children) {\n  return React.createElement(\"h6\", null, children);\n}, _a[richTextTypes.BLOCKS.EMBEDDED_ENTRY] = function (node, children) {\n  return React.createElement(\"div\", null, children);\n}, _a[richTextTypes.BLOCKS.EMBEDDED_RESOURCE] = function (node, children) {\n  return React.createElement(\"div\", null, children);\n}, _a[richTextTypes.BLOCKS.UL_LIST] = function (node, children) {\n  return React.createElement(\"ul\", null, children);\n}, _a[richTextTypes.BLOCKS.OL_LIST] = function (node, children) {\n  return React.createElement(\"ol\", null, children);\n}, _a[richTextTypes.BLOCKS.LIST_ITEM] = function (node, children) {\n  return React.createElement(\"li\", null, children);\n}, _a[richTextTypes.BLOCKS.QUOTE] = function (node, children) {\n  return React.createElement(\"blockquote\", null, children);\n}, _a[richTextTypes.BLOCKS.HR] = function () {\n  return React.createElement(\"hr\", null);\n}, _a[richTextTypes.BLOCKS.TABLE] = function (node, children) {\n  return React.createElement(\"table\", null, React.createElement(\"tbody\", null, children));\n}, _a[richTextTypes.BLOCKS.TABLE_ROW] = function (node, children) {\n  return React.createElement(\"tr\", null, children);\n}, _a[richTextTypes.BLOCKS.TABLE_HEADER_CELL] = function (node, children) {\n  return React.createElement(\"th\", null, children);\n}, _a[richTextTypes.BLOCKS.TABLE_CELL] = function (node, children) {\n  return React.createElement(\"td\", null, children);\n}, _a[richTextTypes.INLINES.ASSET_HYPERLINK] = function (node) {\n  return defaultInline(richTextTypes.INLINES.ASSET_HYPERLINK, node);\n}, _a[richTextTypes.INLINES.ENTRY_HYPERLINK] = function (node) {\n  return defaultInline(richTextTypes.INLINES.ENTRY_HYPERLINK, node);\n}, _a[richTextTypes.INLINES.RESOURCE_HYPERLINK] = function (node) {\n  return defaultInlineResource(richTextTypes.INLINES.RESOURCE_HYPERLINK, node);\n}, _a[richTextTypes.INLINES.EMBEDDED_ENTRY] = function (node) {\n  return defaultInline(richTextTypes.INLINES.EMBEDDED_ENTRY, node);\n}, _a[richTextTypes.INLINES.EMBEDDED_RESOURCE] = function (node, _children) {\n  return defaultInlineResource(richTextTypes.INLINES.EMBEDDED_RESOURCE, node);\n}, _a[richTextTypes.INLINES.HYPERLINK] = function (node, children) {\n  return React.createElement(\"a\", {\n    href: node.data.uri\n  }, children);\n}, _a);\nvar defaultMarkRenderers = (_b = {}, _b[richTextTypes.MARKS.BOLD] = function (text) {\n  return React.createElement(\"b\", null, text);\n}, _b[richTextTypes.MARKS.ITALIC] = function (text) {\n  return React.createElement(\"i\", null, text);\n}, _b[richTextTypes.MARKS.UNDERLINE] = function (text) {\n  return React.createElement(\"u\", null, text);\n}, _b[richTextTypes.MARKS.CODE] = function (text) {\n  return React.createElement(\"code\", null, text);\n}, _b[richTextTypes.MARKS.SUPERSCRIPT] = function (text) {\n  return React.createElement(\"sup\", null, text);\n}, _b[richTextTypes.MARKS.SUBSCRIPT] = function (text) {\n  return React.createElement(\"sub\", null, text);\n}, _b[richTextTypes.MARKS.STRIKETHROUGH] = function (text) {\n  return React.createElement(\"s\", null, text);\n}, _b);\nfunction defaultInline(type, node) {\n  return React.createElement(\"span\", {\n    key: node.data.target.sys.id\n  }, \"type: \", node.nodeType, \" id: \", node.data.target.sys.id);\n}\nfunction defaultInlineResource(type, node) {\n  return React.createElement(\"span\", {\n    key: node.data.target.sys.urn\n  }, \"type: \", node.nodeType, \" urn: \", node.data.target.sys.urn);\n}\n/**\n * Serialize a Contentful Rich Text `document` to React tree\n */\nfunction documentToReactComponents(richTextDocument, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (!richTextDocument) {\n    return null;\n  }\n  return nodeToReactComponent(richTextDocument, {\n    renderNode: __assign(__assign({}, defaultNodeRenderers), options.renderNode),\n    renderMark: __assign(__assign({}, defaultMarkRenderers), options.renderMark),\n    renderText: options.renderText,\n    preserveWhitespace: options.preserveWhitespace\n  });\n}\nexports.documentToReactComponents = documentToReactComponents;","map":{"version":3,"names":["appendKeyToValidElement","element","key","React","isValidElement","cloneElement","nodeListToReactComponents","nodes","options","map","node","index","nodeToReactComponent","renderNode","renderMark","renderText","preserveWhitespace","richTextTypes","helpers","isText","nodeValue","value","replace","match","repeat","length","lines_1","split","jsxLines_1","forEach","line","push","createElement","marks","reduce","mark","type","children","content","nodeType","Fragment","defaultNodeRenderers","_a","BLOCKS","DOCUMENT","PARAGRAPH","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","EMBEDDED_ENTRY","EMBEDDED_RESOURCE","UL_LIST","OL_LIST","LIST_ITEM","QUOTE","HR","TABLE","TABLE_ROW","TABLE_HEADER_CELL","TABLE_CELL","INLINES","ASSET_HYPERLINK","defaultInline","ENTRY_HYPERLINK","RESOURCE_HYPERLINK","defaultInlineResource","_children","HYPERLINK","href","data","uri","defaultMarkRenderers","_b","MARKS","BOLD","text","ITALIC","UNDERLINE","CODE","SUPERSCRIPT","SUBSCRIPT","STRIKETHROUGH","target","sys","id","urn","documentToReactComponents","richTextDocument","__assign"],"sources":["C:\\Users\\ainge\\OneDrive\\Documents\\GitHub\\mr-ingerson-blog\\node_modules\\@contentful\\rich-text-react-renderer\\src\\util\\appendKeyToValidElement.ts","C:\\Users\\ainge\\OneDrive\\Documents\\GitHub\\mr-ingerson-blog\\node_modules\\@contentful\\rich-text-react-renderer\\src\\util\\nodeListToReactComponents.tsx","C:\\Users\\ainge\\OneDrive\\Documents\\GitHub\\mr-ingerson-blog\\node_modules\\@contentful\\rich-text-react-renderer\\src\\index.tsx"],"sourcesContent":["import { cloneElement, isValidElement, ReactNode } from 'react';\n\nexport function appendKeyToValidElement(element: ReactNode, key: number): ReactNode {\n  if (isValidElement(element) && element.key === null) {\n    return cloneElement(element, { key });\n  }\n  return element;\n}\n","import React, { ReactNode } from 'react';\n\nimport { helpers, Mark } from '@contentful/rich-text-types';\n\nimport { CommonNode, Options } from '..';\n\nimport { appendKeyToValidElement } from './appendKeyToValidElement';\n\nexport function nodeListToReactComponents(nodes: CommonNode[], options: Options): ReactNode {\n  return nodes.map((node: CommonNode, index: number): ReactNode => {\n    return appendKeyToValidElement(nodeToReactComponent(node, options), index);\n  });\n}\n\nexport function nodeToReactComponent(node: CommonNode, options: Options): ReactNode {\n  const { renderNode, renderMark, renderText, preserveWhitespace } = options;\n\n  if (helpers.isText(node)) {\n    let nodeValue: ReactNode = renderText ? renderText(node.value) : node.value;\n\n    // Preserving whitespace is only supported with the default transformations.\n    if (preserveWhitespace && !renderText) {\n      // Preserve multiple spaces.\n      nodeValue = (nodeValue as string).replace(/ {2,}/g, (match) => '\\u00A0'.repeat(match.length));\n\n      // Preserve line breaks.\n      const lines = (nodeValue as string).split('\\n');\n      const jsxLines: (string | React.JSX.Element)[] = [];\n\n      lines.forEach((line, index) => {\n        jsxLines.push(line);\n        if (index !== lines.length - 1) {\n          jsxLines.push(<br />);\n        }\n      });\n      nodeValue = jsxLines;\n    }\n\n    return node.marks.reduce((value: ReactNode, mark: Mark): ReactNode => {\n      if (!renderMark[mark.type]) {\n        return value;\n      }\n      return renderMark[mark.type](value);\n    }, nodeValue);\n  } else {\n    const children: ReactNode = nodeListToReactComponents(node.content, options);\n    if (!node.nodeType || !renderNode[node.nodeType]) {\n      return <>{children}</>;\n    }\n    return renderNode[node.nodeType](node, children);\n  }\n}\n","import React, { ReactNode } from 'react';\n\nimport { Block, BLOCKS, Document, Inline, INLINES, MARKS, Text } from '@contentful/rich-text-types';\n\nimport { nodeToReactComponent } from './util/nodeListToReactComponents';\n\nconst defaultNodeRenderers: RenderNode = {\n  [BLOCKS.DOCUMENT]: (node, children) => children,\n  [BLOCKS.PARAGRAPH]: (node, children) => <p>{children}</p>,\n  [BLOCKS.HEADING_1]: (node, children) => <h1>{children}</h1>,\n  [BLOCKS.HEADING_2]: (node, children) => <h2>{children}</h2>,\n  [BLOCKS.HEADING_3]: (node, children) => <h3>{children}</h3>,\n  [BLOCKS.HEADING_4]: (node, children) => <h4>{children}</h4>,\n  [BLOCKS.HEADING_5]: (node, children) => <h5>{children}</h5>,\n  [BLOCKS.HEADING_6]: (node, children) => <h6>{children}</h6>,\n  [BLOCKS.EMBEDDED_ENTRY]: (node, children) => <div>{children}</div>,\n  [BLOCKS.EMBEDDED_RESOURCE]: (node, children) => <div>{children}</div>,\n  [BLOCKS.UL_LIST]: (node, children) => <ul>{children}</ul>,\n  [BLOCKS.OL_LIST]: (node, children) => <ol>{children}</ol>,\n  [BLOCKS.LIST_ITEM]: (node, children) => <li>{children}</li>,\n  [BLOCKS.QUOTE]: (node, children) => <blockquote>{children}</blockquote>,\n  [BLOCKS.HR]: () => <hr />,\n  [BLOCKS.TABLE]: (node, children) => (\n    <table>\n      <tbody>{children}</tbody>\n    </table>\n  ),\n  [BLOCKS.TABLE_ROW]: (node, children) => <tr>{children}</tr>,\n  [BLOCKS.TABLE_HEADER_CELL]: (node, children) => <th>{children}</th>,\n  [BLOCKS.TABLE_CELL]: (node, children) => <td>{children}</td>,\n  [INLINES.ASSET_HYPERLINK]: (node) => defaultInline(INLINES.ASSET_HYPERLINK, node as Inline),\n  [INLINES.ENTRY_HYPERLINK]: (node) => defaultInline(INLINES.ENTRY_HYPERLINK, node as Inline),\n  [INLINES.RESOURCE_HYPERLINK]: (node) =>\n    defaultInlineResource(INLINES.RESOURCE_HYPERLINK, node as Inline),\n  [INLINES.EMBEDDED_ENTRY]: (node) => defaultInline(INLINES.EMBEDDED_ENTRY, node as Inline),\n  [INLINES.EMBEDDED_RESOURCE]: (node, _children) =>\n    defaultInlineResource(INLINES.EMBEDDED_RESOURCE, node as Inline),\n  [INLINES.HYPERLINK]: (node, children) => <a href={node.data.uri}>{children}</a>,\n};\n\nconst defaultMarkRenderers: RenderMark = {\n  [MARKS.BOLD]: (text) => <b>{text}</b>,\n  [MARKS.ITALIC]: (text) => <i>{text}</i>,\n  [MARKS.UNDERLINE]: (text) => <u>{text}</u>,\n  [MARKS.CODE]: (text) => <code>{text}</code>,\n  [MARKS.SUPERSCRIPT]: (text) => <sup>{text}</sup>,\n  [MARKS.SUBSCRIPT]: (text) => <sub>{text}</sub>,\n  [MARKS.STRIKETHROUGH]: (text) => <s>{text}</s>,\n};\n\nfunction defaultInline(type: string, node: Inline): ReactNode {\n  return (\n    <span key={node.data.target.sys.id}>\n      type: {node.nodeType} id: {node.data.target.sys.id}\n    </span>\n  );\n}\n\nfunction defaultInlineResource(type: string, node: Inline) {\n  return (\n    <span key={node.data.target.sys.urn}>\n      type: {node.nodeType} urn: {node.data.target.sys.urn}\n    </span>\n  );\n}\n\nexport type CommonNode = Text | Block | Inline;\n\nexport interface NodeRenderer {\n  (node: Block | Inline, children: ReactNode): ReactNode;\n}\n\nexport interface RenderNode {\n  [k: string]: NodeRenderer;\n}\n\nexport interface RenderMark {\n  [k: string]: (text: ReactNode) => ReactNode;\n}\n\nexport interface RenderText {\n  (text: string): ReactNode;\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode;\n  /**\n   * Mark renderers\n   */\n  renderMark?: RenderMark;\n  /**\n   * Text renderer\n   */\n  renderText?: RenderText;\n  /**\n   * Keep line breaks and multiple spaces\n   */\n  preserveWhitespace?: boolean;\n}\n\n/**\n * Serialize a Contentful Rich Text `document` to React tree\n */\nexport function documentToReactComponents(\n  richTextDocument: Document,\n  options: Options = {},\n): ReactNode {\n  if (!richTextDocument) {\n    return null;\n  }\n\n  return nodeToReactComponent(richTextDocument, {\n    renderNode: {\n      ...defaultNodeRenderers,\n      ...options.renderNode,\n    },\n    renderMark: {\n      ...defaultMarkRenderers,\n      ...options.renderMark,\n    },\n    renderText: options.renderText,\n    preserveWhitespace: options.preserveWhitespace,\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}